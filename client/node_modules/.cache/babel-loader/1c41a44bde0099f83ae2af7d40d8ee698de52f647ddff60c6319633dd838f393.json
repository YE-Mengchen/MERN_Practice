{"ast":null,"code":"import{v4 as uuidv4}from'uuid';import{SET_ALERT,REMOVE_ALERT}from'./types';export var setAlert=function setAlert(msg,alertType){var timeout=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;return function(dispatch){var id=uuidv4();dispatch({type:SET_ALERT,payload:{msg:msg,alertType:alertType,id:id}});setTimeout(function(){return dispatch({type:REMOVE_ALERT,payload:id});},timeout);};};","map":{"version":3,"names":["v4","uuidv4","SET_ALERT","REMOVE_ALERT","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","type","payload","setTimeout"],"sources":["/Users/yemengchen/Desktop/MERN_Practice/client/src/actions/alert.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ \n        type: REMOVE_ALERT,\n        payload: id}),\n        timeout\n        );\n};\n"],"mappings":"AAAA,OAASA,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CACnC,OAASC,SAAS,CAAEC,YAAY,KAAQ,SAAS,CAEjD,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,GAAG,CAAEC,SAAS,KAAE,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,OAAK,UAAAG,QAAQ,CAAI,CACpE,GAAM,CAAAC,EAAE,CAAGX,MAAM,CAAC,CAAC,CACnBU,QAAQ,CAAC,CACLE,IAAI,CAAEX,SAAS,CACfY,OAAO,CAAE,CAAET,GAAG,CAAHA,GAAG,CAAEC,SAAS,CAATA,SAAS,CAAEM,EAAE,CAAFA,EAAG,CAClC,CAAC,CAAC,CAEFG,UAAU,CAAC,iBAAM,CAAAJ,QAAQ,CAAC,CACtBE,IAAI,CAAEV,YAAY,CAClBW,OAAO,CAAEF,EAAE,CAAC,CAAC,GACbL,OACA,CAAC,CACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}