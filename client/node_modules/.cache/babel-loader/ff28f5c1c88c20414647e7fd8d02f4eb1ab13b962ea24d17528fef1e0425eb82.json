{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// LogOut\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["/Users/yemengchen/Desktop/MERN_Practice/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err){\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n\n}\n\n\n//Register User\n\nexport const register = ({ name, email, password }) => async dispatch =>{\n    const config ={\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password});\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({  \n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    }catch(err){\n        const errors = err.response.data.errors;\n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        \n        dispatch({\n            type: REGISTER_FAIL\n        });\n\n    }\n};\n\n\nexport const login = ({ email, password }) => async dispatch =>{\n    const config ={\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password});\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    }catch(err){\n        const errors = err.response.data.errors;\n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        \n        dispatch({\n            type: LOGIN_FAIL\n        });\n\n    }\n};\n\n// LogOut\nexport const logout = () => dispatch => {\n    dispatch({ type: CLEAR_PROFILE});\n    dispatch({ type: LOGOUT});\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}