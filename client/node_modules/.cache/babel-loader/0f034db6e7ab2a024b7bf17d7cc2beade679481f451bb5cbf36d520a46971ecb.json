{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_PROFILES } from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// TODO: GET github repos\n\nexport const createProfile = (formData, navigate, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n    if (!edit) {\n      navigate('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_PROFILES","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","createProfile","formData","navigate","edit","config","headers","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"sources":["/Users/yemengchen/Desktop/MERN_Practice/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED,\n    GET_PROFILES\n\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n    }catch (err){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n// Get profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// TODO: GET github repos\n\n\nexport const createProfile =\n  (formData, navigate, edit = false) =>\n  async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n      const res = await axios.post('/api/profile', formData, config);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n    if (!edit){\n        navigate('/dashboard');\n    }\n    } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors){\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n\n\n\n  // Add Experience\n  export const addExperience = (formData, navigate) => async dispatch => {\n    try {\n      const config = {\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      };\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n\n    dispatch(\n      setAlert('Experience Added', 'success')\n    );\n      navigate('/dashboard');\n  } catch (err) {\n  const errors = err.response.data.errors;\n\n  if (errors){\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n  }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n\n  }\n\n\n\n  // Add Education\n  export const addEducation = (formData, navigate) => async dispatch => {\n    try {\n      const config = {\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      };\n    const res = await axios.put('/api/profile/education', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n\n    dispatch(\n      setAlert('Education Added', 'success')\n    );\n      navigate('/dashboard');\n  } catch (err) {\n  const errors = err.response.data.errors;\n\n  if (errors){\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n  }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n\n  };\n\n  // Delete experience\n  export const deleteExperience = (id) => async (dispatch) => {\n    try {\n      const res = await axios.delete(`/api/profile/experience/${id}`);\n  \n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n  \n      dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  // Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}