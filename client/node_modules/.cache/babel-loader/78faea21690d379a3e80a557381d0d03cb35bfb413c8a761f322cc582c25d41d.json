{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from './types';\n\n// GET Posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["/Users/yemengchen/Desktop/MERN_Practice/client/src/actions/post.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert} from './alert';\nimport {\n    GET_POSTS,\n    GET_POST,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n// GET Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n        \n        dispatch({\n            type: GET_POSTS,\n            payload:res.data\n        });\n    }catch (err){\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n          });\n\n    }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n  \n      dispatch({\n        type: UPDATE_LIKES,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  // Remove like\nexport const removeLike = (id) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n  \n      dispatch({\n        type: UPDATE_LIKES,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  // Delete Post\n  export const deletePost = (id) => async (dispatch) => {\n    try {\n      const res = await axios.delete(`/api/posts/${id}`);\n  \n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n  \n      dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  // Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n\n    const res = await axios.post('/api/posts', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getPost = id => async dispatch => {\n  try {\n      const res = await axios.get(`/api/posts/${id}`);\n      \n      dispatch({\n          type: GET_POST,\n          payload:res.data\n      });\n  }catch (err){\n      dispatch({\n          type: POST_ERROR,\n          payload: { msg: err.response.statusText, status: err.response.status }\n        });\n\n  }\n};\n  \n\n  // Add Comment\n  export const addComment = (postId, formData) => async (dispatch) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n  \n      const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n  \n      dispatch({\n        type: ADD_COMMENT,\n        payload: res.data\n      });\n  \n      dispatch(setAlert('Comment Created', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n\n  // Delete Comment\n  export const deleteComment = (postId, commentId) => async (dispatch) => {\n    try {\n  \n      const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n  \n      dispatch({\n        type: REMOVE_COMMENT,\n        payload: commentId\n      });\n  \n      dispatch(setAlert('Comment Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}